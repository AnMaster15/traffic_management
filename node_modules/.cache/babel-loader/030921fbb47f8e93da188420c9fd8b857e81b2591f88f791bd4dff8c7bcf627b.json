{"ast":null,"code":"var _jsxFileName = \"/Users/anchitmehra/Documents/traf/smart-traffic-dashboard/smart-traffic-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TrafficMap from './TrafficMap';\nimport KpiCards from './KpiCards';\nimport AnalyticsCharts from './AnalyticsCharts';\nimport Controls from './Controls';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [trafficData, setTrafficData] = useState(null);\n  const [kpis, setKpis] = useState({\n    averageSpeed: {\n      current: 0,\n      target: 40\n    },\n    waitingTime: {\n      current: 0,\n      target: 30\n    },\n    congestionLevel: {\n      current: 0,\n      target: 50\n    },\n    incidentDetection: {\n      current: 0,\n      target: 2\n    },\n    fuelSavings: {\n      current: 0,\n      target: 500\n    },\n    uptime: {\n      current: 0,\n      target: 99\n    },\n    satisfaction: {\n      current: 0,\n      target: 90\n    }\n  });\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n  useEffect(() => {\n    // Simulate data fetching\n    const fetchData = () => {\n      // Generate mock KPI data\n      setKpis({\n        averageSpeed: {\n          current: 32 + Math.random() * 8,\n          target: 40\n        },\n        waitingTime: {\n          current: 25 + Math.random() * 10,\n          target: 30\n        },\n        congestionLevel: {\n          current: 45 + Math.random() * 20,\n          target: 50\n        },\n        incidentDetection: {\n          current: 1.5 + Math.random(),\n          target: 2\n        },\n        fuelSavings: {\n          current: 420 + Math.random() * 100,\n          target: 500\n        },\n        uptime: {\n          current: 99.5 + Math.random(),\n          target: 99\n        },\n        satisfaction: {\n          current: 85 + Math.random() * 10,\n          target: 90\n        }\n      });\n\n      // Generate time series data for charts\n      const now = new Date();\n      const newTimeSeriesData = [...Array(24)].map((_, i) => {\n        const hour = new Date(now);\n        hour.setHours(now.getHours() - 23 + i);\n        return {\n          time: hour.toLocaleTimeString([], {\n            hour: '2-digit'\n          }),\n          speed: 25 + Math.random() * 25,\n          volume: 100 + Math.random() * 400,\n          incidents: Math.floor(Math.random() * 5)\n        };\n      });\n      setTimeSeriesData(newTimeSeriesData);\n\n      // Traffic map data\n      setTrafficData({\n        intersections: [{\n          id: 1,\n          lat: 51.505,\n          lng: -0.09,\n          name: \"Main Intersection\",\n          congestion: 0.7\n        }, {\n          id: 2,\n          lat: 51.51,\n          lng: -0.1,\n          name: \"Central Square\",\n          congestion: 0.4\n        }, {\n          id: 3,\n          lat: 51.515,\n          lng: -0.09,\n          name: \"North Junction\",\n          congestion: 0.9\n        }]\n      });\n    };\n    fetchData();\n    const interval = setInterval(fetchData, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Smart Traffic Management Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Last updated: \", new Date().toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"System status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-active\",\n            children: \"Operational\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"map-section\",\n        children: /*#__PURE__*/_jsxDEV(TrafficMap, {\n          data: trafficData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"kpi-section\",\n        children: /*#__PURE__*/_jsxDEV(KpiCards, {\n          kpis: kpis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"analytics-section\",\n        children: /*#__PURE__*/_jsxDEV(AnalyticsCharts, {\n          kpis: kpis,\n          timeSeriesData: timeSeriesData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"controls-section\",\n        children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"U+VzncjrOYA+bBrqwefPNQOiZK0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","TrafficMap","KpiCards","AnalyticsCharts","Controls","jsxDEV","_jsxDEV","Dashboard","_s","trafficData","setTrafficData","kpis","setKpis","averageSpeed","current","target","waitingTime","congestionLevel","incidentDetection","fuelSavings","uptime","satisfaction","timeSeriesData","setTimeSeriesData","fetchData","Math","random","now","Date","newTimeSeriesData","Array","map","_","i","hour","setHours","getHours","time","toLocaleTimeString","speed","volume","incidents","floor","intersections","id","lat","lng","name","congestion","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["/Users/anchitmehra/Documents/traf/smart-traffic-dashboard/smart-traffic-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TrafficMap from './TrafficMap';\nimport KpiCards from './KpiCards';\nimport AnalyticsCharts from './AnalyticsCharts';\nimport Controls from './Controls';\nimport '../styles/Dashboard.css';\n\nconst Dashboard = () => {\n  const [trafficData, setTrafficData] = useState(null);\n  const [kpis, setKpis] = useState({\n    averageSpeed: { current: 0, target: 40 },\n    waitingTime: { current: 0, target: 30 },\n    congestionLevel: { current: 0, target: 50 },\n    incidentDetection: { current: 0, target: 2 },\n    fuelSavings: { current: 0, target: 500 },\n    uptime: { current: 0, target: 99 },\n    satisfaction: { current: 0, target: 90 }\n  });\n  const [timeSeriesData, setTimeSeriesData] = useState([]);\n\n  useEffect(() => {\n    // Simulate data fetching\n    const fetchData = () => {\n      // Generate mock KPI data\n      setKpis({\n        averageSpeed: { current: 32 + Math.random() * 8, target: 40 },\n        waitingTime: { current: 25 + Math.random() * 10, target: 30 },\n        congestionLevel: { current: 45 + Math.random() * 20, target: 50 },\n        incidentDetection: { current: 1.5 + Math.random(), target: 2 },\n        fuelSavings: { current: 420 + Math.random() * 100, target: 500 },\n        uptime: { current: 99.5 + Math.random(), target: 99 },\n        satisfaction: { current: 85 + Math.random() * 10, target: 90 }\n      });\n\n      // Generate time series data for charts\n      const now = new Date();\n      const newTimeSeriesData = [...Array(24)].map((_, i) => {\n        const hour = new Date(now);\n        hour.setHours(now.getHours() - 23 + i);\n        return {\n          time: hour.toLocaleTimeString([], { hour: '2-digit' }),\n          speed: 25 + Math.random() * 25,\n          volume: 100 + Math.random() * 400,\n          incidents: Math.floor(Math.random() * 5)\n        };\n      });\n      setTimeSeriesData(newTimeSeriesData);\n\n      // Traffic map data\n      setTrafficData({\n        intersections: [\n          { id: 1, lat: 51.505, lng: -0.09, name: \"Main Intersection\", congestion: 0.7 },\n          { id: 2, lat: 51.51, lng: -0.1, name: \"Central Square\", congestion: 0.4 },\n          { id: 3, lat: 51.515, lng: -0.09, name: \"North Junction\", congestion: 0.9 }\n        ]\n      });\n    };\n\n    fetchData();\n    const interval = setInterval(fetchData, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard-header\">\n        <h1>Smart Traffic Management Dashboard</h1>\n        <div className=\"header-info\">\n          <span>Last updated: {new Date().toLocaleTimeString()}</span>\n          <span>System status: <span className=\"status-active\">Operational</span></span>\n        </div>\n      </header>\n\n      <main className=\"dashboard-content\">\n        <section className=\"map-section\">\n          <TrafficMap data={trafficData} />\n        </section>\n\n        <section className=\"kpi-section\">\n          <KpiCards kpis={kpis} />\n        </section>\n\n        <section className=\"analytics-section\">\n          <AnalyticsCharts kpis={kpis} timeSeriesData={timeSeriesData} />\n        </section>\n\n        <section className=\"controls-section\">\n          <Controls />\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/anchitmehra/Documents/traf/smart-traffic-dashboard/smart-traffic-frontend/src/components/TrafficMap.js\";\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst TrafficMap = ({\n  data\n}) => {\n  // Default coordinates (center of the map)\n  const center = [51.505, -0.09]; // Example coordinates (London)\n\n  // Mock traffic data - replace with real data from props\n  const trafficPoints = (data === null || data === void 0 ? void 0 : data.intersections) || [{\n    id: 1,\n    lat: 51.505,\n    lng: -0.09,\n    name: \"Main Intersection\",\n    congestion: 0.7\n  }, {\n    id: 2,\n    lat: 51.51,\n    lng: -0.1,\n    name: \"Central Square\",\n    congestion: 0.4\n  }, {\n    id: 3,\n    lat: 51.515,\n    lng: -0.09,\n    name: \"North Junction\",\n    congestion: 0.9\n  }];\n  const getCongestionColor = level => {\n    if (level > 0.8) return 'red';\n    if (level > 0.5) return 'orange';\n    return 'green';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"traffic-map-container\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: 13,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), trafficPoints.map(point => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [point.lat, point.lng],\n        icon: L.divIcon({\n          className: 'custom-marker',\n          html: `<div style=\"background-color: ${getCongestionColor(point.congestion)}\"></div>`,\n          iconSize: [20, 20]\n        }),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: point.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Congestion: \", Math.round(point.congestion * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Avg Speed: \", point.avgSpeed || 'N/A', \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, point.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = TrafficMap;\nexport default TrafficMap;\nvar _c;\n$RefreshReg$(_c, \"TrafficMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","TrafficMap","data","center","trafficPoints","intersections","id","lat","lng","name","congestion","getCongestionColor","level","className","children","zoom","style","height","width","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","point","position","icon","divIcon","html","iconSize","Math","round","avgSpeed","_c","$RefreshReg$"],"sources":["/Users/anchitmehra/Documents/traf/smart-traffic-dashboard/smart-traffic-frontend/src/components/TrafficMap.js"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n// Fix for default marker icons\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nconst TrafficMap = ({ data }) => {\n  // Default coordinates (center of the map)\n  const center = [51.505, -0.09]; // Example coordinates (London)\n  \n  // Mock traffic data - replace with real data from props\n  const trafficPoints = data?.intersections || [\n    { id: 1, lat: 51.505, lng: -0.09, name: \"Main Intersection\", congestion: 0.7 },\n    { id: 2, lat: 51.51, lng: -0.1, name: \"Central Square\", congestion: 0.4 },\n    { id: 3, lat: 51.515, lng: -0.09, name: \"North Junction\", congestion: 0.9 }\n  ];\n\n  const getCongestionColor = (level) => {\n    if (level > 0.8) return 'red';\n    if (level > 0.5) return 'orange';\n    return 'green';\n  };\n\n  return (\n    <div className=\"traffic-map-container\">\n      <MapContainer \n        center={center} \n        zoom={13} \n        style={{ height: '100%', width: '100%' }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        \n        {trafficPoints.map(point => (\n          <Marker \n            key={point.id} \n            position={[point.lat, point.lng]}\n            icon={L.divIcon({\n              className: 'custom-marker',\n              html: `<div style=\"background-color: ${getCongestionColor(point.congestion)}\"></div>`,\n              iconSize: [20, 20]\n            })}\n          >\n            <Popup>\n              <div className=\"map-popup\">\n                <h3>{point.name}</h3>\n                <p>Congestion: {Math.round(point.congestion * 100)}%</p>\n                <p>Avg Speed: {point.avgSpeed || 'N/A'} km/h</p>\n              </div>\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default TrafficMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}